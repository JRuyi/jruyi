/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'org.jruyi.osgibnd'

archivesBaseName = 'org.jruyi.common'
version = org_jruyi_common_version
description = 'Provides common classes and services'

ext {
	title = 'JRuyi Common'
}

dependencies {
	compile "org.osgi:org.osgi.core:$org_osgi_core_version"
	compile "org.osgi:org.osgi.compendium:$org_osgi_compendium_version"
	compile "org.slf4j:slf4j-api:$slf4j_version"

	compile "org.jruyi:jruyi-api:2.0.0"

	testCompile "org.codehaus.groovy:groovy-all:$groovy_version"
	testCompile "org.spockframework:spock-core:$spock_core_version"
	testCompile "cglib:cglib-nodep:$cglib_nodep_version"
	testCompile "org.objenesis:objenesis:$objenesis_version"
	testCompile "junit:junit:$junit_version"
}

jar {
	manifest {
		attributes(
				'Export-Package': 'org.jruyi.common',
				'-dsannotations': '*',
		)
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {

			artifactId archivesBaseName

			from components.java

			pom.withXml {
				def projectNode = asNode()
				projectNode.appendNode('name', title)
				projectNode.appendNode('description', description)
				projectNode.appendNode('url', organizationUrl)

				def organizationNode = projectNode.appendNode('organization')
				organizationNode.appendNode('name', organizationName)
				organizationNode.appendNode('url', organizationUrl)

				def licenseNode = projectNode.appendNode('licenses').appendNode('license')
				licenseNode.appendNode('name', licenseName)
				licenseNode.appendNode('url', licenseUrl)
				licenseNode.appendNode('distribution', 'repo')

				projectNode.dependencies.'*'.findAll() {
					it.scope.text() == 'runtime'
				}.each() {
					it.scope*.value = 'provided'
				}
			}

			artifact sourcesJar
		}
	}
}

bintray {
	pkg {
		name = archivesBaseName
		desc = description
		version {
			name = project.version
		}
	}
}
